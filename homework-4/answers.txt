1. An interpreted language goes line by line at runtime using an interpreter, which makes it slower however easier to debug. A compiled language is already translated into machine code before execution which makes it faster but it requires compilation before running.
2. Dynamically typed languages make their variable types determined at runtime while in statically typed languages the types are checked at compile-time. The main difference being that dynamically typed can increase runtime errors due to its methodology while statically typed catches errors earlier. Strongly typed languages enforce strict type rules and don't allow type conversion while weakly typed lanugages allow type coercion.
3. Var can be redeclared, is function-scoped and hoisted with an undefined value. Let cannot be redeclared in the same scope, is block-scoped and hoisted without initialization. Const cannot be reassigned after declaration, is block-scoped and hoisted without initialization.
4. Anonymous functions are functions without a name which are usually used as arguments in higher order-functions, which are functions that take other functions as arguments or return functions such as filter(). Callback functions are passed as arguments to another function and executed later. First-class functions are functions that can be assigned to variables, passed as arguments and returned.
5. Objects are created using {} or the new Object() constructor. In JS, an object is a collection of key-value pairs, meaning that keys are strings or symbols and values can be any data type. The objects are used to store structured data. It is a standalone entity, with properties and type.